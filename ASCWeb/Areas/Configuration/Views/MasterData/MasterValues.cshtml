@model ASCWeb.Areas.Configuration.Models.MasterValuesViewModel
@{
    Layout = "_SecureLayout";
}


<div class="row"></div>
<div class="row padding-top-20px padding-left-20px padding-right-20px">
    <div class="row z-depth-3">
        <div class="section white-text padding-left-10px blue-grey lighten-1">
            <h5>Master Values</h5>
        </div>
        <div class="divider"></div>
        <div class="col s4 padding-bottom-15px">
            <select id="ddlMasterKeys" asp-items="@(new SelectList(ViewBag.MasterKeys, "RowKey", "PartitionKey"))">
                <option>--Select--</option>
            </select>
            <label>Partition Key</label>
        </div>

        <div class="col s4 offset-s4 padding-bottom-15px right-align">
            <a class="modal-trigger waves-effect waves-light" href="#modal1">
                <img width="30" height="30" src="~/images/excel.png" />
            </a>
        </div>

        <div class="col s12 padding-bottom-15px">
            @* Display List of Master Values *@
            <table class="highlight centered" id="tblMasterValues">
                <thead>
                    <tr>
                        <th data-field="RowKey">Row Key</th>
                        <th data-field="PartitionKey">Partition Key</th>
                        <th data-field="Name">Name</th>
                        <th data-field="IsActive">Is Active</th>
                        <th data-field="Actions">Edit</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <div class="row"></div>
    <!-- Details Section -->
    <div class="row z-depth-3">
        <div class="col s12 padding-0px">
            <div class="section white-text padding-left-10px blue-grey lighten-1">
                <h5>Master Value Details</h5>
            </div>
            <div class="divider"></div>
            <form asp-controller="MasterData" asp-action="MasterValues" method="post" class="col s12" id="formMasterValue">
                @Html.AntiForgeryToken()
                <div class="row">
                    <input type="hidden" asp-for="IsEdit" />
                    <input type="hidden" asp-for="MasterValueInContext.RowKey" />
                    <div class="input-field col s4">
                        <input asp-for="MasterValueInContext.RowKey" id="Input_MasterKey_RowKey" disabled="disabled" />
                        <label asp-for="MasterValueInContext.RowKey"></label>
                    </div>

                    <div class="input-field col s4">
                        <select id="Select_MasterValueInContext_PartitionKey"
                                asp-for="MasterValueInContext.PartitionKey"
                                asp-items="@(new SelectList(ViewBag.MasterKeys, "RowKey", "PartitionKey"))" required="required">
                            <option value="">--Select--</option>
                        </select>
                        <label>Partition Keys</label>
                    </div>

                    <div class="input-field col s4">
                        <input asp-for="MasterValueInContext.Name" class="validate" />
                        <label asp-for="MasterValueInContext.Name"></label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s4">
                        <div class="switch">
                            <label>
                                Is Active
                                <input asp-for="MasterValueInContext.IsActive" class="validate" />
                                <span class="lever"></span>
                            </label>
                        </div>
                    </div>

                    <div class="input-field col s8 right-align">
                        <button class="btn waves-effect waves-light btnSubmit" type="submit" name="action">
                            Create
                            <i class="material-icons right">send</i>
                        </button>
                        <button class="btn waves-effect waves-light reset red lighten-1" type="submit" name="action">
                            Reset
                        </button>
                    </div>
                    <div class="row col s12 right-align" asp-validation-summary="All"></div>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Modal Structure -->
<div id="modal1" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4>Upload Excel</h4>
        <p>Upload the Excel file that contains all the master values.</p>

        <!-- div to display errors -->
        <div class="row hide divErrors">
            <div class="col s12">
                <div class="card-panel red lighten-1">
                    <span class="white-text errors"></span>
                </div>
            </div>
        </div>

        <!-- div to display progress -->
        <div class="progress hide">
            <div class="indeterminate"></div>
        </div>

        <form asp-controller="MasterData" asp-action="UploadExcel" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <div class="file-field input-field">
                <div class="btn">
                    <span>File</span>
                    <input type="file" id="files" name="files"/>
                </div>
                <div class="file-path-wrapper">
                    <input class="file-path validate" type="text" />
                </div>

                <div class="input-field row right">
                    <button class="btn waves-effect waves-light btnUpload" type="submit" name="action">
                        Upload
                        <i class="material-icons right">send</i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    <script>
            $(document).ready(function () {
                // Khởi tạo DataTable
                var table = $('#tblMasterValues').DataTable({
                    "ajax": {
                        "url": '@Url.Action("MasterValuesByKey", "MasterData")',
                        "type": "GET",
                    },
                    "pageLength": 3,
                    "lengthMenu": [[3, 5, 10, -1], [3, 5, 10, 'All']],
                    "columns": [
                        { 'data': 'RowKey' },
                        { 'data': 'PartitionKey' },
                        { 'data': 'Name' },
                        { 'data': 'IsActive' },
                        { 'data': 'Actions' }
                    ],
                    "aoColumnDefs": [
                        {
                            "aTargets": [3],
                            "aData": "IsActive",
                            "mRender": function (data, type, full) {
                                if (data === true)
                                    return '<img width="40" height="40" src="@Url.Content("~/images/greenTick.png")" />';
                                else
                                    return '<img width="40" height="40" src="@Url.Content("~/images/redX.png")" />';
                            }
                        },
                        {
                            "aTargets": [4],
                            "aData": "Actions",
                            "mRender": function (data, type, full) {
                                return '<i class="small material-icons edit cursor-hand">mode_edit</i>';
                            }
                        }
                    ]
                });

                // Khởi tạo dropdown
                $('select').formSelect();
                $.validator.setDefaults({
                    ignore: [] // Đảm bảo Materialize CSS không bỏ qua validation cho select
                });

                // Xử lý khi chọn Partition Key từ dropdown #ddlMasterKeys
                $('#ddlMasterKeys').on('change', function () {
                    var selectedKey = $(this).val(); // Lấy PartitionKey (text hiển thị)
                    console.log('PartitionKey được chọn:', selectedKey); // Log để kiểm tra

                    if (selectedKey && selectedKey !== '--Select--') {
                        // Cập nhật URL của DataTable và làm mới bảng
                        table.ajax.url('@Url.Action("MasterValuesByKey", "MasterData")' + '?key=' + encodeURIComponent(selectedKey)).load();
                    } else {
                        // Nếu không chọn giá trị hợp lệ, xóa bảng
                        table.clear().draw();
                    }
                });
            // Save/Create Button Click Event
            $(document).on('click', '.btnSubmit', function () {
                var form = $('#formMasterValue');
                if ($(form).valid()) {
                    var masterData = {
                        MasterValueInContext: {
                            Name: $('#MasterValueInContext_Name').val() || '',
                            PartitionKey: $('#Select_MasterValueInContext_PartitionKey').val() || '',
                            IsActive: $('#MasterValueInContext_IsActive').is(':checked'),
                            RowKey: $('#IsEdit').val() === 'true' ? $('#MasterValueInContext_RowKey').val() : null
                        },
                        IsEdit: $('#IsEdit').val() === 'true'
                    };
                    console.log('Dữ liệu gửi đi:', masterData);

                    if (!masterData.MasterValueInContext.Name || !masterData.MasterValueInContext.PartitionKey) {
                        console.error('Thiếu Name hoặc PartitionKey');
                        alert('Vui lòng điền đầy đủ Name và PartitionKey');
                        return;
                    }

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("MasterValues", "MasterData")',
                        data: masterData,
                        headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                        success: function (data, status, xhr) {
                            console.log('Kết quả:', data);
                            table.ajax.url('@Url.Action("MasterValuesByKey", "MasterData")' + '?key=' + encodeURIComponent($('#ddlMasterKeys option:selected').text()));
                            table.ajax.reload();
                            $('.reset').click();
                            $('.select-wrapper').removeClass('valid');
                        },
                        error: function (xhr, status, error) {
                            console.error('Lỗi:', error, xhr.responseText);
                        }
                    });
                } else {
                    console.log('Form không hợp lệ:', form.validate().errorList);
                }
            });
        });

        $('.modal').modal();

        $(document).on('click', '.btnUpload', function (e) {
            e.preventDefault();

            // Get all files from input file tag
            var fileUpload = $("#files").get(0);
            var files = fileUpload.files;

            if (files.length === 0) {
                alert("Vui lòng chọn file để upload");
                return;
            }

            var formData = new FormData();
            formData.append('files', files[0]);

            // Thêm token anti-forgery
            formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());

            // Hiển thị thanh tiến trình
            $('.progress').removeClass('hide');

            $.ajax({
                url: '/Configuration/MasterData/UploadExcel',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    // Ẩn thanh tiến trình
                    $('.progress').addClass('hide');
                    if (response.success) {  // Chú ý: kiểm tra cả chữ hoa/thường
                        alert("Upload thành công!");
                        // Có thể reload trang nếu cần
                        window.location.reload();
                    } else {
                        // Hiển thị lỗi
                        $('.divErrors').removeClass('hide');
                        $('.errors').html(response.error || "Có lỗi xảy ra khi upload");
                    }
                },
                error: function (xhr, status, error) {
                    $('.progress').addClass('hide');
                    $('.divErrors').removeClass('hide');
                    $('.errors').html("Lỗi: " + (xhr.responseText || error));
                    console.error("Upload error:", xhr.responseText);
                }
            });
        });
    </script>
}